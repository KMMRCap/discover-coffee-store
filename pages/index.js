import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import Banner from '../components/banner'
import Card from '../components/card'
import coffeeStoresData from '../data/coffeeStores.json'
// import { fetchUnsplash } from '../lib/fetchUnsplash'
import useTrackLocation from '../lib/useTrackLocation'
import { useContext, useEffect } from 'react'
import { StoreContext, ACTION_TYPES } from '../lib/store'

export async function getStaticProps(context) {

  // const photos = await fetchUnsplash()

  const data = coffeeStoresData.results.map((item, index) => {
    return {
      fsq_id: item.fsq_id,
      name: item.name,
      location: {
        address: item.location.address,
        neighborhood: item.location.neighborhood
      },
      // imgUrl: photos[index]
    }
  })

  return {
    props: {
      coffeeStores: data.slice(0, 6)
    }
  }
}

export default function Home(props) {

  const { state, dispatch } = useContext(StoreContext)

  const { handleTrackLocation, latLong,
    locationErrMsg, isFindingLocation } = useTrackLocation()

  useEffect(() => {
    if (state.showStores) {
      dispatch({
        type: ACTION_TYPES.SET_COFFEE_STORES,
        payload: {
          coffeeStores: coffeeStoresData.results.map((item, index) => {
            return {
              fsq_id: item.fsq_id,
              name: item.name,
              location: {
                address: item.location.address,
                neighborhood: item.location.neighborhood
              },
              // imgUrl: photos[index]
            }
          })
        }
      })
    }
  }, [state.showStores,dispatch])


  const handleOnBannerClick = () => {
    handleTrackLocation()
    dispatch({
      type: ACTION_TYPES.SET_SHOW_STORES,
      payload: { showStores: true }
    })
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Coffee Connoisseur</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Banner
          buttonText={isFindingLocation ? 'Loading...' : 'View stores nearby'}
          onClick={handleOnBannerClick}
        />
        {locationErrMsg && <p>Somthing went wrong: {locationErrMsg}</p>}
        <div className={styles.heroImage}>
          <Image src='/static/hero-image.png' alt='banner-pic' width={700} height={400} />
        </div>
        {state.coffeeStores.length ?
          <div className={styles.sectionWrapper}>
            <h2 className={styles.heading2}>Stores near me</h2>
            <div className={styles.cardLayout}>
              {
                state.coffeeStores.map((item, index) => (
                  <Card
                    key={index}
                    name={item.name}
                    // imgUrl={item.imgUrl}
                    imgUrl={'/static/mesh-gradient.png'}
                    href={`/coffee-store/${item.fsq_id}`}
                  />
                ))
              }
            </div>
          </div>
          :
          null
        }
        {props.coffeeStores.length ?
          <div className={styles.sectionWrapper}>
            <h2 className={styles.heading2}>Toronto stores</h2>
            <div className={styles.cardLayout}>
              {
                props.coffeeStores.map((item, index) => (
                  <Card
                    key={index}
                    name={item.name}
                    // imgUrl={item.imgUrl}
                    imgUrl={'/static/mesh-gradient.png'}
                    href={`/coffee-store/${item.fsq_id}`}
                  />
                ))
              }
            </div>
          </div>
          :
          'sorry, no results'
        }
      </main>
    </div>
  )
}
